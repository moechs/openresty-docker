name: Docker Image CI

on:
  push:
    branches:
    - "main"
    - "releases/**"
    tags:        
    - v*
    paths-ignore:
    - '**.md'

env:
  REGISTRY_IMAGE: moechs/openresty
  REGISTRY_IMAGE_DEFAULTBACKEND: moechs/defaultbackend

jobs:
  build-main:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          provenance: false
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest-main
        run: |
          mkdir -p /tmp/digests-main
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests-main/${digest#sha256:}"
      - name: Upload digest-main
        uses: actions/upload-artifact@v3
        with:
          name: digests-main
          path: /tmp/digests-main/*
          if-no-files-found: error
          retention-days: 1

  merge-main:
    runs-on: ubuntu-22.04
    needs:
      - build-main
    steps:
      - name: Download digests-main
        uses: actions/download-artifact@v3
        with:
          name: digests-main
          path: /tmp/digests-main
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests-main
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}


  build-defaultbackend:
    needs:
      - merge-main
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout defaultbackend
        uses: actions/checkout@v4
      - name: Docker meta defaultbackend
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE_DEFAULTBACKEND }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Set up QEMU defaultbackend
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx defaultbackend
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub defaultbackend
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push by digest defaultbackend
        id: build
        uses: docker/build-push-action@v5
        with:
          context: defaultbackend
          provenance: false
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: RESTY_IMAGE_TAG=${{ steps.meta.outputs.version }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE_DEFAULTBACKEND }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest defaultbackend
        run: |
          mkdir -p /tmp/digests-defaultbackend
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests-defaultbackend/${digest#sha256:}"
      - name: Upload digest defaultbackend
        uses: actions/upload-artifact@v3
        with:
          name: digests-defaultbackend
          path: /tmp/digests-defaultbackend/*
          if-no-files-found: error
          retention-days: 1

  merge-defaultbackend:
    runs-on: ubuntu-22.04
    needs:
      - build-defaultbackend
    steps:
      - name: Download digests defaultbackend
        uses: actions/download-artifact@v3
        with:
          name: digests-defaultbackend
          path: /tmp/digests-defaultbackend
      - name: Set up Docker Buildx defaultbackend
        uses: docker/setup-buildx-action@v3
      - name: Docker meta defaultbackend
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE_DEFAULTBACKEND }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Login to Docker Hub defaultbackend
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create manifest list and push defaultbackend
        working-directory: /tmp/digests-defaultbackend
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE_DEFAULTBACKEND }}@sha256:%s ' *)
      - name: Inspect image defaultbackend
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE_DEFAULTBACKEND }}:${{ steps.meta.outputs.version }}
