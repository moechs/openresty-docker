#lua_package_path '/usr/local/openresty/site/lualib/?.ljbc;/usr/local/openresty/site/lualib/?/init.ljbc;/usr/local/openresty/lualib/?.ljbc;/usr/local/openresty/lualib/?/init.ljbc;/usr/local/openresty/site/lualib/?.lua;/usr/local/openresty/site/lualib/?/init.lua;/usr/local/openresty/lualib/?.lua;/usr/local/openresty/lualib/?/init.lua;./?.lua;/usr/local/openresty/luajit/share/luajit-2.1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua;/usr/local/openresty/luajit/share/lua/5.1/?.lua;/usr/local/openresty/luajit/share/lua/5.1/?/init.lua;;';
#lua_package_cpath '/usr/local/openresty/site/lualib/?.so;/usr/local/openresty/lualib/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so;;';

#lua_shared_dict sets 1m;
#lua_shared_dict prometheus_metrics 10m;

#init_by_lua_block {
#  config = require "resty.sets"
#  config:setdefault("status", 1)
#  config:load()
#}

#init_worker_by_lua_block {
#  prometheus = require("prometheus").init("prometheus_metrics")
#  metric_requests = prometheus:counter(
#    "nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
#  metric_latency = prometheus:histogram(
#    "nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
#  metric_connections = prometheus:gauge(
#    "nginx_http_connections", "Number of HTTP connections", {"state"})
#}

#log_by_lua_block {
#  metric_requests:inc(1, {ngx.var.server_name, ngx.var.status})
#  metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
#}
